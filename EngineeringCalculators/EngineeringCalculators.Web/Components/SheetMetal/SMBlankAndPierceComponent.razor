
<div>
    <div class="text-center fs-4 fw-bold mb-3">
        <label>Cutting Force, Stripping Force and Clearance Calculations</label>
    </div>


    <EditForm Model="Model" FormName="BlankAndPierceCalculation" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <div class="row mb-2" style="border: 1px solid black; border-radius: 10px;">
            <div class="text-center fs-5 fw-bold">
                <label>Results</label>
            </div>

            <div class="row ps-3 pe-3 m-2">
                <div class="col" style="text-align:center">
                    <button class="btn btn-primary btn-sm" type="submit" @onclick=@(() => SetSubmitType(nameof(Enums.SubmitType.Calculate)))>Calculate</button>
                </div>
                @* <div class="col" style="text-align:center"> *@
                @*     <button class="btn btn-primary btn-sm" type="submit" @onclick=@(() => SetSubmitType(nameof(Enums.SubmitType.Save)))>Save</button> *@
                @* </div> *@
                <hr class="mt-2"/>
            </div>

            <div class="row mb-1">
                <div class="col m-1">
                    <label for="cuttingForce" class="form-label text-nowrap">Cutting Force (N)</label>
                    <InputNumber TValue="double" id="cuttingForce" @bind-Value="Model.CuttingForce" class="form-control" readonly />
                </div>

                <div class="col m-1">
                    <label for="reducedCuttingForce" class="form-label text-nowrap">Reduced Cutting Force (N)</label>
                    <InputNumber TValue="double" id="reducedCuttingForce" @bind-Value="Model.ReducedCuttingForce" class="form-control" readonly />
                </div>

                <div class="col m-1">
                    <label for="strippingForce" class="form-label text-nowrap">Stripping Force (N)</label>
                    <InputNumber TValue="double" id="strippingForce" @bind-Value="Model.StrippingForce" class="form-control" readonly />
                </div>

                <div class="col m-1">
                    <label for="clearance" class="form-label text-nowrap">Total Clearance (2 x c) (mm)</label>
                    <InputNumber TValue="double" id="clearance" @bind-Value="Model.Clearance" class="form-control" />
                </div>
                <div class="col m-1">
                    <label for="powerRequirement" class="form-label text-nowrap">Press Requirement (tons)</label>
                    <InputNumber TValue="double" id="powerRequirement" @bind-Value="Model.PressTonnageRequirements" class="form-control" readonly />
                </div>
            </div>
        </div>
        

        <div class="row justify-content-center">
            <div class="col m-1" style="border: 1px solid black; border-radius: 10px; max-width: 300px; min-width: 250px">
                <div class="text-center fs-5 fw-bold">
                    <label>Details</label>
                </div>                

                <div class="form-control mb-1">
                    <div class="mt-1">
                        <ValidationMessage For="@(() => Model.ProjectName)" />
                        <label for="projectName" class="form-label">Project Name</label>
                        <InputText id="projectName" @bind-Value="Model.ProjectName" class="form-control" />
                    </div>

                    <div class="mt-1">
                        <label for="description" class="form-label">Description</label>
                        <InputText id="description" @bind-Value="Model.Description" class="form-control" />
                    </div>

                    <div class="mt-1">
                        <ValidationMessage For="@(() => Model.MaterialThickness)" />
                        <label for="thickness" class="form-label">Material Thickness (mm)</label>
                        <InputNumber TValue="double" id="thickness" @bind-Value="Model.MaterialThickness" class="form-control" />
                    </div>

                    <div class="mt-1">
                        <ValidationMessage For="@(() => Model.NumberOfPunches)" />
                        <label for="numberOfPunches" class="form-label">Number of Punches</label>
                        <InputNumber TValue="int" id="numberOfPunches" @bind-Value="Model.NumberOfPunches" class="form-control" />
                    </div>

                    <div class="mt-1">
                        <ValidationMessage For="@(() => Model.Perimeter)" />
                        <label for="perimeter" class="form-label">Perimeter (mm) "for a single punch"</label>
                        <InputNumber TValue="double" id="perimeter" @bind-Value="Model.Perimeter" class="form-control" />
                    </div>

                    <div class="mt-1">
                        @if (Model.CalcType.Equals(nameof(Enums.PierceAndBlankCalcType.Tensile)) && String.IsNullOrWhiteSpace(CalcErrorMessage) == false)
                        {
                            <label style="color: red">@CalcErrorMessage</label>
                            <br />
                        }
                        <label for="tensileStrength" class="form-label ">Tensile Strength (MPA)</label>
                        <InputNumber TValue="double" id="tensileStrength" @bind-Value="Model.TensileStrength" class="form-control" />

                    </div>

                    <div class="mt-1 mb-1">
                        @if (Model.CalcType.Equals(nameof(Enums.PierceAndBlankCalcType.Shear)) && String.IsNullOrWhiteSpace(CalcErrorMessage) == false)
                        {
                            <label style="color: red">@CalcErrorMessage</label>
                            <br />
                        }
                        <label for="shearStrength" class="form-label ">Shear Strength (MPA)</label>
                        <InputNumber TValue="double" id="shearStrength" @bind-Value="Model.ShearStrength" class="form-control" />
                    </div>

                    <div class="mt-1 mb-1">
                        <ValidationMessage For="@(() => Model.SafetyFactor)"/>
                        <label for="safetyFactor" class="form-label ">Press Tonnage Safety Factor</label>
                        <InputNumber TValue="double" id="safetyFactor" @bind-Value="Model.SafetyFactor" class="form-control" />
                    </div>
                </div>
            </div>

            @* Cutting force calculation based on whether Tensile or Shear strength to be used *@
            <div class="col m-1" style="border: 1px solid black; border-radius: 10px; max-width: 300px; min-width: 250px">
                <div class="text-center fs-5 fw-bold">
                    <label>Calculation Type</label>
                </div>
                <div class="form-control mb-1">
                    <div class="form-control">
                        <ValidationMessage For="@(() => Model.CalcType)" />

                        <InputRadioGroup TValue="string" Name="calcType" @bind-Value:get="@Model.CalcType" @bind-Value:set="(Value) => SetCalcType(Value)">
                            <div class="form-check form-check-inline">
                                <InputRadio TValue="string" Value=@nameof(Enums.PierceAndBlankCalcType.Tensile) />
                                <span> Tensile Strength &nbsp; </span>
                            </div>

                            <div class="form-check form-check-inline">
                                <InputRadio TValue="string" Value=@nameof(Enums.PierceAndBlankCalcType.Shear) />
                                <span> Shear Strength </span>
                            </div>
                        </InputRadioGroup>
                    </div>

                    @if (Model.CalcType.Equals(nameof(Enums.PierceAndBlankCalcType.Tensile)))
                    {
                        <div class="form-control mt-2">
                            <ValidationMessage For="@(() => Model.PercentageOfTensileStrength)" />
                            <label for="percentOfTensileStrength" class="form-label">Percent Of Tensile Strength</label>
                            <InputNumber TValue="double" id="percentOfTensileStrength" @bind-Value="Model.PercentageOfTensileStrength" class="form-control" />
                        </div>

                        <div style="width: 100%; text-align:center">
                            <img src="/Images/Sheet Metal/CuttingForceTensile.png" alt="Cutting Force Tensile" style="width:100%" />
                            @* Image of Tensile formula and calculation go here *@
                        </div>
                    }

                    @if (Model.CalcType.Equals(nameof(Enums.PierceAndBlankCalcType.Shear)))
                    {

                        <div style="width: 100%; text-align:center">
                            <img src="/Images/Sheet Metal/Cutting Force Shear.png" alt="Cutting Force Shear" style="width:100%" />
                            @* Image of Shear strength formula and calculation go here *@
                        </div>
                    }
                </div>
            </div>

            @* Cutting force reduction due to punch sharpening *@
            <div class="col m-1" style="border: 1px solid black; border-radius: 10px; max-width: 300px; min-width: 250px">

                <div class="text-center fs-5 fw-bold">
                    <label>Sharpening Profile Type</label>
                </div>
                <div class="form-control mb-1">
                    <ValidationMessage For="@(() => Model.SharpeningProfileType)" />
                    <InputRadioGroup TValue="string" Name="reductionForceType" @bind-Value:get="@Model.SharpeningProfileType" @bind-Value:set="(Value) => SetForceReductionType(Value)">
                        <div class="form-check form-check-inline" style="width: 50%">
                            <InputRadio TValue="string" Value=@nameof(Enums.SharpeningProfileType.Flat) />
                            <span> Flat </span>
                        </div>

                        <div class="form-check form-check-inline">
                            <InputRadio TValue="string" Value=@nameof(Enums.SharpeningProfileType.Beveled) />
                            <span> Beveled </span>
                        </div>
                    </InputRadioGroup>
                </div>

                @if (Model.SharpeningProfileType.Equals(nameof(Enums.SharpeningProfileType.Flat)))
                {
                    <div style="width: 100%; text-align:center">
                        <img src="/Images/Sheet Metal/Flat Face.png" alt="Cutting Force Flat" style="width:100%" />
                    </div>
                }

                @if (Model.SharpeningProfileType.Equals(nameof(Enums.SharpeningProfileType.Beveled)))
                {
                    <div class="form-control mt-2">
                        @if (String.IsNullOrWhiteSpace(CuttingForceReductionCalcErrorMessage) == false){
                            <label style="color: red">@CuttingForceReductionCalcErrorMessage</label>
                            <br />
                        }
                        <label for="reductionCoefficient" class="form-label">Cutting Force Reduction Coefficient</label>
                        <InputNumber TValue="double" id="reductionCoefficient" @bind-Value="Model.CuttingForceReductionPercent" class="form-control" />
                    </div>

                    <div style="width: 100%; text-align:center">
                        <img src="/Images/Sheet Metal/Beveled Sharpening.png" alt="Cutting Force Beveled" style="width:100%" />
                    </div>
                }
            </div>

            <div class="col m-1" style="border: 1px solid black; border-radius: 10px; max-width: 300px; min-width: 250px">
                <div class="text-center fs-5 fw-bold">
                    <label>Stripper Type</label>
                </div>
                <div class="form-control mb-1">
                    <div class="form-control ">
                        <ValidationMessage For="@(() => Model.StripperType)"/>
                        <InputRadioGroup TValue="string" Name="stripperType" @bind-Value:get="@Model.StripperType" @bind-Value:set="(Value) => SetStripperType(Value)">
                            <div class="form-check form-check-inline" style="width: 50%">
                                <InputRadio TValue="string" Value=@nameof(Enums.StripperType.Solid) />
                                <span> Solid </span>
                            </div>

                            <div class="form-check form-check-inline">
                                <InputRadio TValue="string" Value=@nameof(Enums.StripperType.Spring) />
                                <span> Spring </span>
                            </div>
                        </InputRadioGroup>
                    </div>
                    <div>

                        @* Stripper Content to go here *@

                        <div>
                            <div class="form-control mt-2">
                                <ValidationMessage For="@(() => Model.StrippingConstant)" />
                                <label for="strippingConstant" class="form-label">Stripping Constant</label>
                                <InputNumber TValue="double" id="strippingConstant" @bind-Value="Model.StrippingConstant" class="form-control" />
                            </div>
                            <div>
                                <label>F<sub>s</sub> = C<sub>s</sub> * F</label>
                            </div>
                            <div>
                                <label class="fw-bold">Where:</label>
                            </div>
                            <div>
                                <label>C<sub>s</sub> = Stripping Constant</label>
                            </div>
                            <div>
                                <label>F = Punch Force</label>
                            </div>

                        </div>
                        <div class="text-center">
                            <label style="font-weight: bolder; text-decoration: underline">Stripping Constant Table</label>
                        </div>
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th style="width:50%; ">Material Thickness</th>
                                    <th>Simple Punch/Blank</th>
                                </tr>

                            </thead>
                            <tbody>
                                <tr>
                                    <td>Up to 1.0</td>
                                    <td>0.02 to 0.06</td>
                                </tr>
                                <tr>
                                    <td>1.0 to 5.0</td>
                                    <td>0.06 to 0.08</td>
                                </tr>
                                <tr>
                                    <td>Over 5.0</td>
                                    <td>0.08 to 0.10</td>
                                </tr>
                            </tbody>
                        </table>

                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th style="width:50%">Material Thickness</th>
                                    <th>Compound Punch/Blank</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>Up to 1.0</td>
                                    <td>0.06 to 0.08</td>
                                </tr>
                                <tr>
                                    <td>1.0 to 5.0</td>
                                    <td>0.08 to 0.12</td>
                                </tr>
                                <tr>
                                    <td>Over 5.0</td>
                                    <td>0.12 to 0.15</td>
                                </tr>
                            </tbody>
                        </table>

                        <table class=" table table-sm ">
                            <thead>
                                <tr>
                                    <th style="width:50%">Material Thickness</th>
                                    <th>Punch/Blank at same time</th>
                                </tr>

                            </thead>
                            <tbody>
                                <tr>
                                    <td>Up to 1.0</td>
                                    <td>0.10 to 0.12</td>
                                </tr>
                                <tr>
                                    <td>1.0 to 5.0</td>
                                    <td>0.12 to 0.15</td>
                                </tr>
                                <tr>
                                    <td>Over 5.0</td>
                                    <td>0.15 to 0.20</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            @* Clearance Content *@
            <div class="col m-1" style="border: 1px solid black; border-radius: 10px; max-width: 300px; min-width: 250px">
                <div class="text-center fs-5 fw-bold">
                    <label>Clearance</label>
                </div>

                <div class="form-control mt-2">
                    <ValidationMessage For="@(() => Model.ClearanceConstant)" />
                    <label for="ClearanceConstant" class="form-label">k Value Constant</label>
                    <InputNumber TValue="double" id="ClearanceConstant" @bind-Value="Model.ClearanceConstant" class="form-control" />
                </div>

                <div class="form-control mb-1">
                    <div style="width: 100%; text-align:center">
                        <img src="/Images/Sheet Metal/Clearance.png" alt="Clearance" style="width:100%" />
                    </div>
                </div>

            </div>
        </div>


    </EditForm>


</div>




